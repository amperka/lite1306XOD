#ifdef __AVR__
#include <avr/pgmspace.h>
#elif defined(ESP8266) || defined(ESP32)
#include <pgmspace.h>
#endif // __AVR__

/*
 * Not all non-AVR boards installs define macros
 * for compatibility with existing PROGMEM-reading AVR code.
 */
#ifndef pgm_read_byte
#define pgm_read_byte(addr) (*(const unsigned char*)(addr))
#endif
// clang-format off
{{#global}}
// clang-format on
#ifndef _D_RELOC_
#define _D_RELOC_
const uint8_t digitsFontRemap[] PROGMEM = {
    0x01, // 00 - '.'
    0x01, // 01 - '.'
    0x01, // 02 - '.'
    0x01, // 03 - '.'
    0x01, // 04 - '.'
    0x01, // 05 - '.'
    0x01, // 06 - '.'
    0x01, // 07 - '.'
    0x01, // 08 - '.'
    0x01, // 09 - '.'
    0x01, // 0A - '.'
    0x01, // 0B - '.'
    0x01, // 0C - '.'
    0x01, // 0D - '.'
    0x01, // 0E - '.'
    0x01, // 0F - '.'
    0x01, // 10 - '.'
    0x01, // 11 - '.'
    0x01, // 12 - '.'
    0x01, // 13 - '.'
    0x01, // 14 - '.'
    0x01, // 15 - '.'
    0x01, // 16 - '.'
    0x01, // 17 - '.'
    0x01, // 18 - '.'
    0x01, // 19 - '.'
    0x01, // 1A - '.'
    0x01, // 1B - '.'
    0x01, // 1C - '.'
    0x01, // 1D - '.'
    0x01, // 1E - '.'
    0x01, // 1F - '.'
    0x01, // 20 - ' '
    0x01, // 21 - '!'
    0x01, // 22 - '"'
    0x01, // 23 - '#'
    0x01, // 24 - '$'
    0x01, // 25 - '%'
    0x01, // 26 - '&'
    0x01, // 27 - '''
    0x01, // 28 - '('
    0x01, // 29 - ')'
    0x01, // 2A - '*'
    0x01, // 2B - '+'
    0x01, // 2C - ','
    0x00, // 2D - '-'
    0x01, // 2E - '.'
    0x02, // 2F - '/'
    0x03, // 30 - '0'
    0x04, // 31 - '1'
    0x05, // 32 - '2'
    0x06, // 33 - '3'
    0x07, // 34 - '4'
    0x08, // 35 - '5'
    0x09, // 36 - '6'
    0x0a, // 37 - '7'
    0x0b, // 38 - '8'
    0x0c, // 39 - '9'
    0x01, // 3A - ':'
    0x01, // 3B - ';'
    0x01, // 3C - '<'
    0x01, // 3D - '='
    0x01, // 3E - '>'
    0x01, // 3F - '?'
    0x01, // 40 - '@'
    0x01, // 41 - 'A'
    0x01, // 42 - 'B'
    0x01, // 43 - 'C'
    0x01, // 44 - 'D'
    0x01, // 45 - 'E'
    0x01, // 46 - 'F'
    0x01, // 47 - 'G'
    0x01, // 48 - 'H'
    0x01, // 49 - 'I'
    0x01, // 4A - 'J'
    0x01, // 4B - 'K'
    0x01, // 4C - 'L'
    0x01, // 4D - 'M'
    0x01, // 4E - 'N'
    0x01, // 4F - 'O'
    0x01, // 50 - 'P'
    0x01, // 51 - 'Q'
    0x01, // 52 - 'R'
    0x01, // 53 - 'S'
    0x01, // 54 - 'T'
    0x01, // 55 - 'U'
    0x01, // 56 - 'V'
    0x01, // 57 - 'W'
    0x01, // 58 - 'X'
    0x01, // 59 - 'Y'
    0x01, // 5A - 'Z'
    0x01, // 5B - '['
    0x01, // 5C - '\'
    0x01, // 5D - ']'
    0x01, // 5E - '^'
    0x01, // 5F - '_'
    0x01, // 60 - '`'
    0x01, // 61 - 'a'
    0x01, // 62 - 'b'
    0x01, // 63 - 'c'
    0x01, // 64 - 'd'
    0x01, // 65 - 'e'
    0x01, // 66 - 'f'
    0x01, // 67 - 'g'
    0x01, // 68 - 'h'
    0x01, // 69 - 'i'
    0x01, // 6A - 'j'
    0x01, // 6B - 'k'
    0x01, // 6C - 'l'
    0x01, // 6D - 'm'
    0x01, // 6E - 'n'
    0x01, // 6F - 'o'
    0x01, // 70 - 'p'
    0x01, // 71 - 'q'
    0x01, // 72 - 'r'
    0x01, // 73 - 's'
    0x01, // 74 - 't'
    0x01, // 75 - 'u'
    0x01, // 76 - 'v'
    0x01, // 77 - 'w'
    0x01, // 78 - 'x'
    0x01, // 79 - 'y'
    0x01, // 7A - 'z'
    0x01, // 7B - '{'
    0x01, // 7C - '|'
    0x01, // 7D - '}'
    0x01, // 7E - '~'
    0x01, // 7F - '.' -?
    0x01, // 80 - 'А'
    0x01, // 81 - 'Б'
    0x01, // 82 - 'В'
    0x01, // 83 - 'Г'
    0x01, // 84 - 'Д'
    0x01, // 85 - 'Е'
    0x01, // 86 - 'Ж'
    0x01, // 87 - 'З'
    0x01, // 88 - 'И'
    0x01, // 89 - 'Й'
    0x01, // 8A - 'К'
    0x01, // 8B - 'Л'
    0x01, // 8C - 'М'
    0x01, // 8D - 'Н'
    0x01, // 8E - 'О'
    0x01, // 8F - 'П'
    0x01, // 90 - 'Р'
    0x01, // 91 - 'С'
    0x01, // 92 - 'Т'
    0x01, // 93 - 'У'
    0x01, // 94 - 'Ф'
    0x01, // 95 - 'Х'
    0x01, // 96 - 'Ц'
    0x01, // 97 - 'Ч'
    0x01, // 98 - 'Ш'
    0x01, // 99 - 'Щ'
    0x01, // 9A - 'Ъ'
    0x01, // 9B - 'Ы'
    0x01, // 9C - 'Ь'
    0x01, // 9D - 'Э'
    0x01, // 9E - 'Ю'
    0x01, // 9F - 'Я'
    0x01, // A0 - 'а'
    0x01, // A1 - 'б'
    0x01, // A2 - 'в'
    0x01, // A3 - 'г'
    0x01, // A4 - 'д'
    0x01, // A5 - 'е'
    0x01, // A6 - 'ж'
    0x01, // A7 - 'з'
    0x01, // A8 - 'и'
    0x01, // A9 - 'й'
    0x01, // AA - 'к'
    0x01, // AB - 'л'
    0x01, // AC - 'м'
    0x01, // AD - 'н'
    0x01, // AE - 'о'
    0x01, // AF - 'п'
    0x01, // B0 - '.'
    0x01, // B1 - '.'
    0x01, // B2 - '.'
    0x01, // B3 - '.'
    0x01, // B4 - '.'
    0x01, // B5 - '.'
    0x01, // B6 - '.'
    0x01, // B7 - '.'
    0x01, // B8 - '.'
    0x01, // B9 - '.'
    0x01, // BA - '.'
    0x01, // BB - '.'
    0x01, // BC - '.'
    0x01, // BD - '.'
    0x01, // BE - '.'
    0x01, // BF - '.'
    0x01, // C0 - '.'
    0x01, // C1 - '.'
    0x01, // C2 - '.'
    0x01, // C3 - '.'
    0x01, // C4 - '.'
    0x01, // C5 - '.'
    0x01, // C6 - '.'
    0x01, // C7 - '.'
    0x01, // C8 - '.'
    0x01, // C9 - '.'
    0x01, // CA - '.'
    0x01, // CB - '.'
    0x01, // CC - '.'
    0x01, // CD - '.'
    0x01, // CE - '.'
    0x01, // CF - '.'
    0x01, // D0 - '.'
    0x01, // D1 - '.'
    0x01, // D2 - '.'
    0x01, // D3 - '.'
    0x01, // D4 - '.'
    0x01, // D5 - '.'
    0x01, // D6 - '.'
    0x01, // D7 - '.'
    0x01, // D8 - '.'
    0x01, // D9 - '.'
    0x01, // DA - '.'
    0x01, // DB - '.'
    0x01, // DC - '.'
    0x01, // DD - '.'
    0x01, // DE - '.'
    0x01, // DF - '.'
    0x01, // E0 - '.'
    0x01, // E1 - 'р'
    0x01, // E2 - 'с'
    0x01, // E3 - 'т'
    0x01, // E4 - 'у'
    0x01, // E5 - 'ф'
    0x01, // E6 - 'х'
    0x01, // E7 - 'ц'
    0x01, // E8 - 'ч'
    0x01, // E9 - 'ш'
    0x01, // EA - 'щ'
    0x01, // EB - 'ъ'
    0x01, // EC - 'ы'
    0x01, // ED - 'ь'
    0x01, // EE - 'э'
    0x01, // EF - 'ю'
    0x01, // F0 - 'я'
    0x01, // F1 - 'Ё'
    0x01, // F2 - 'ё'
    0x01, // F3 - '.'
    0x01, // F4 - '.'
    0x01, // F5 - '.'
    0x01, // F6 - '.'
    0x01, // F7 - '.'
    0x01, // F8 - '.'
    0x01, // F9 - '.'
    0x01, // FA - '.'
    0x01, // FB - '.'
    0x01, // FC - '.'
    0x01, // FD - '.'
    0x01, // FE - '.'
    0x01, // FF - '.'
};

#endif
#ifndef _D_24x40_
#define _D_24x40_
const uint8_t digits24x40[] PROGMEM = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // -
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xF8, 0xFC, 0xFE, 0xFE, 0xFC, 0xF8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // .
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x1F, 0x0F, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x7C, 0xFE, 0xFF, 0xFF, 0xFE, 0x7C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // /
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0xFE, 0x3F, 0x07, 0x01, 0x03, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF8, 0xF0, 0xE0, 0xE0, 0xC0, 0x80, 0xE0, 0xF8, 0xFF, 0x3F, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x07, 0x0F, 0x1F, 0x1F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x07, 0x07, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x0F, 0x1F, 0x3F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, // 1
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x1C, 0x3E, 0x7F, 0x7F, 0x3F, 0x1F, 0x0F, 0x07, 0x03, 0x03, 0x01, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF8, 0xFC, 0xFF, 0xFF, 0x7F, 0x3F, 0x1F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xFE, 0xDF, 0xEF, 0xEF, 0xE7, 0xE3, 0xE1, 0xE1, 0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x1F, 0x1F, 0x0F, 0x07, 0x03, 0x00, 0x00, 0x00, // 2
    0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, 0xE0, 0xC0, 0xC0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x1F, 0x0F, 0x07, 0x03, 0x01, 0x81, 0xC0, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x0E, 0x0E, 0x0F, 0x0F, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFF, 0xF9, 0xF0, 0xE0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x3C, 0x7E, 0xFF, 0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 3
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF8, 0xF8, 0xF8, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xE0, 0xF8, 0x3C, 0x1F, 0x07, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFC, 0xFF, 0xE7, 0xE3, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xC3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0x83, 0xC3, 0xC3, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, // 4
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0x78, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x07, 0x01, 0x81, 0xC1, 0xC1, 0xE1, 0xF1, 0xE1, 0xE1, 0xC1, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x3F, 0x3F, 0x1F, 0x0E, 0x07, 0x07, 0x07, 0x07, 0x0F, 0x1F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xF0, 0xFC, 0xFC, 0xFC, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0xC0, 0x80, 0x80, 0xE0, 0xFF, 0xFF, 0x7F, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 5
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF0, 0xF0, 0xE0, 0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF8, 0xFC, 0xFE, 0x7F, 0x0F, 0x01, 0x01, 0x03, 0x83, 0x87, 0xCF, 0xCF, 0xDF, 0x8F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB8, 0x1C, 0x1E, 0x0E, 0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFE, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xF8, 0xF0, 0xE0, 0xC0, 0xC0, 0x80, 0xE0, 0xFF, 0xFF, 0x3F, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 6
    0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0x78, 0x38, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1E, 0x1F, 0x07, 0x03, 0x03, 0x01, 0x01, 0x01, 0x81, 0xC1, 0xF1, 0xF9, 0xFD, 0x3F, 0x0F, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xF0, 0xFC, 0xFE, 0xFF, 0xFF, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 7
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF8, 0xF0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFC, 0xFF, 0xFF, 0xE7, 0xC1, 0xC1, 0x81, 0x81, 0x81, 0x81, 0x83, 0xC3, 0xFF, 0xFF, 0x7F, 0x3F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xCF, 0xFF, 0xFF, 0x7F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFE, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF0, 0xE0, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xE0, 0xFB, 0x7F, 0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x1F, 0x1F, 0x0F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 8
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0xF0, 0xF8, 0xF8, 0xF8, 0xF0, 0xE0, 0xE0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xF8, 0xFE, 0xFF, 0xFF, 0x87, 0x01, 0x01, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF8, 0xF0, 0x70, 0x38, 0x3C, 0x1E, 0xCF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF9, 0xFD, 0xFB, 0xF1, 0xF0, 0xE0, 0xC0, 0xC0, 0xE0, 0xFC, 0xFF, 0x7F, 0x1F, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 9
};
#endif
// clang-format off
{{/global}}
// clang-format on

struct Font {
    uint8_t w;
    uint8_t h;
    const uint8_t* reloc;
    const uint8_t* font;
};

using Type = uint32_t;

struct State {
    struct Font font = { 24, 40, digitsFontRemap, digits24x40 };
};

// clang-format off
{{ GENERATED_CODE }}
// clang-format on

void evaluate(Context ctx) {
    if (isSettingUp()) {
        auto state = getState(ctx);
        emitValue<output_N40>(ctx, (uint32_t)&state->font);
    }
}
